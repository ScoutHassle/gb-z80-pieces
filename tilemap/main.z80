INCLUDE "core/hardware.inc"
INCLUDE "core/memory.z80"

SECTION "Header", ROM0[$100]

EntryPoint: ; Execution begins
    ;di ; Disable interrupts.
    nop
    jp main ;

REPT $150 - $104
    db 0
endr

SECTION "Game code", rom0

INCLUDE "assets/cloud.inc"
INCLUDE "assets/cloudsmap.inc"

main:
    ; main loop
    call waitVBlank

    ; LCD off.
    xor a ; AKA ld a, 0
    ld [rLCDC], a

	call loadTileLabel
	call initdisplay

.main_loop:

    ;call waitVBlank
    ; updates   
    jr .main_loop

waitVBlank
   ; halt
   ld a, [rLY]
   cp 144 ; Check if we are past VBlank
   jr nz, waitVBlank
   ret

initdisplay:
   ; Init display registers
    ld a, %11100100 ; Load Palette data
    ld [rBGP], a

    xor a
    ld [rSCY], a
    ld [rSCX], a

    ; Shut downthe sound
    ld [rNR52], a

    ; And turn the screen back on
    ld a, %10000001
    ld [rLCDC], a
	ret

; memory locs
; $8000-$87FF sprite
; $8800-$8FFF shared
; $9000  BG tiles

loadTileLabel:
	ld hl, $9000 ; Writing to... But why? What are those first 10 bytes doing?!
	ld de, CloudTile
	ld bc, 16
	call memcpy


    ld hl, $9800
    ld de, CloudMap ; Currently supports 32 iterations.
    ld bc, 1024
    call memcpy
    ret

SECTION "player_vars", WRAM0
XPos:: DS 1